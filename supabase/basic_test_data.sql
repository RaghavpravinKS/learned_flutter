-- =============================================
-- SIMPLE TEST DATA FOR FEATURE VERIFICATION
-- Run this after complete_database_reset.sql and complete_schema_with_functions.sql
-- =============================================

-- 1. Create test payment plans
INSERT INTO payment_plans (id, name, description, billing_cycle, is_active) VALUES
('plan-monthly', 'Monthly Plan', 'Pay monthly for flexibility', 'month', true),
('plan-quarterly', 'Quarterly Plan', 'Pay quarterly for better value', 'quarter', true),
('plan-yearly', 'Yearly Plan', 'Pay yearly for maximum savings', 'year', true);

-- 2. Create test admin user
INSERT INTO users (id, email, first_name, last_name, user_type, is_active, email_confirmed_at, created_at, updated_at) VALUES
('admin-001', 'admin@learned.com', 'System', 'Admin', 'admin', true, NOW(), NOW(), NOW());

-- 3. Create test teachers using the admin function
SELECT create_teacher_by_admin(
    'admin-001',
    'sarah.johnson@learned.com',
    'Sarah',
    'Johnson',
    '+1-555-0101',
    'PhD in Mathematics, 10+ years teaching experience',
    'Passionate mathematics educator specializing in advanced algebra and calculus',
    12,
    'Mathematics, Algebra, Calculus'
);

SELECT create_teacher_by_admin(
    'admin-001',
    'michael.chen@learned.com',
    'Michael',
    'Chen',
    '+1-555-0102',
    'MSc Physics, Former Research Scientist',
    'Physics expert with practical lab experience and research background',
    8,
    'Physics, Quantum Mechanics, Laboratory Sciences'
);

SELECT create_teacher_by_admin(
    'admin-001',
    'emily.davis@learned.com',
    'Emily',
    'Davis',
    '+1-555-0103',
    'PhD Chemistry, Industrial Experience',
    'Chemistry specialist with both academic and industry background',
    15,
    'Chemistry, Organic Chemistry, Laboratory Sciences'
);

SELECT create_teacher_by_admin(
    'admin-001',
    'robert.smith@learned.com',
    'Robert',
    'Smith',
    '+1-555-0104',
    'MSc Biology, Environmental Sciences',
    'Biology educator focused on life sciences and environmental studies',
    10,
    'Biology, Environmental Science, Life Sciences'
);

SELECT create_teacher_by_admin(
    'admin-001',
    'lisa.anderson@learned.com',
    'Lisa',
    'Anderson',
    '+1-555-0105',
    'MA English Literature, Published Author',
    'English literature expert and published writer with extensive teaching experience',
    14,
    'English Literature, Creative Writing, Language Arts'
);

-- 4. Create test classrooms (without teacher assignments initially)
INSERT INTO classrooms (id, name, description, subject, grade_level, board, max_students, is_active, created_at, updated_at) VALUES
('class-math-11', 'Advanced Mathematics - Grade 11', 'Comprehensive mathematics course covering algebra, geometry, and calculus fundamentals', 'Mathematics', 11, 'CBSE', 30, true, NOW(), NOW()),
('class-physics-12', 'Physics Mastery - Grade 12', 'Complete physics course with practical experiments and theory', 'Physics', 12, 'CBSE', 25, true, NOW(), NOW()),
('class-chem-10', 'Chemistry Fundamentals - Grade 10', 'Introduction to chemistry with lab sessions', 'Chemistry', 10, 'ICSE', 20, true, NOW(), NOW()),
('class-bio-11', 'Biology Excellence - Grade 11', 'Detailed study of life sciences and biology', 'Biology', 11, 'State Board', 25, true, NOW(), NOW()),
('class-eng-12', 'English Literature - Grade 12', 'Advanced English literature and writing skills', 'English', 12, 'CBSE', 35, true, NOW(), NOW());

-- 5. Assign teachers to classrooms using the admin function
-- Note: Teacher IDs will be generated by the create_teacher_by_admin function
-- We'll use the teacher_id from the teachers table based on user email

-- Assign Sarah Johnson (Mathematics) to Math class
SELECT assign_teacher_to_classroom(
    'admin-001',
    'class-math-11',
    (SELECT t.id FROM teachers t JOIN users u ON t.user_id = u.id WHERE u.email = 'sarah.johnson@learned.com')
);

-- Assign Michael Chen (Physics) to Physics class
SELECT assign_teacher_to_classroom(
    'admin-001',
    'class-physics-12',
    (SELECT t.id FROM teachers t JOIN users u ON t.user_id = u.id WHERE u.email = 'michael.chen@learned.com')
);

-- Assign Emily Davis (Chemistry) to Chemistry class
SELECT assign_teacher_to_classroom(
    'admin-001',
    'class-chem-10',
    (SELECT t.id FROM teachers t JOIN users u ON t.user_id = u.id WHERE u.email = 'emily.davis@learned.com')
);

-- Assign Robert Smith (Biology) to Biology class
SELECT assign_teacher_to_classroom(
    'admin-001',
    'class-bio-11',
    (SELECT t.id FROM teachers t JOIN users u ON t.user_id = u.id WHERE u.email = 'robert.smith@learned.com')
);

-- Assign Lisa Anderson (English) to English class
SELECT assign_teacher_to_classroom(
    'admin-001',
    'class-eng-12',
    (SELECT t.id FROM teachers t JOIN users u ON t.user_id = u.id WHERE u.email = 'lisa.anderson@learned.com')
);

-- 6. Create pricing for classrooms
INSERT INTO classroom_pricing (id, classroom_id, payment_plan_id, price, created_at, updated_at) VALUES
-- Mathematics pricing
(gen_random_uuid(), 'class-math-11', 'plan-monthly', 150.00, NOW(), NOW()),
(gen_random_uuid(), 'class-math-11', 'plan-quarterly', 400.00, NOW(), NOW()),
(gen_random_uuid(), 'class-math-11', 'plan-yearly', 1400.00, NOW(), NOW()),

-- Physics pricing
(gen_random_uuid(), 'class-physics-12', 'plan-monthly', 180.00, NOW(), NOW()),
(gen_random_uuid(), 'class-physics-12', 'plan-quarterly', 500.00, NOW(), NOW()),
(gen_random_uuid(), 'class-physics-12', 'plan-yearly', 1800.00, NOW(), NOW()),

-- Chemistry pricing
(gen_random_uuid(), 'class-chem-10', 'plan-monthly', 120.00, NOW(), NOW()),
(gen_random_uuid(), 'class-chem-10', 'plan-quarterly', 320.00, NOW(), NOW()),
(gen_random_uuid(), 'class-chem-10', 'plan-yearly', 1100.00, NOW(), NOW()),

-- Biology pricing
(gen_random_uuid(), 'class-bio-11', 'plan-monthly', 140.00, NOW(), NOW()),
(gen_random_uuid(), 'class-bio-11', 'plan-quarterly', 380.00, NOW(), NOW()),
(gen_random_uuid(), 'class-bio-11', 'plan-yearly', 1300.00, NOW(), NOW()),

-- English pricing
(gen_random_uuid(), 'class-eng-12', 'plan-monthly', 100.00, NOW(), NOW()),
(gen_random_uuid(), 'class-eng-12', 'plan-quarterly', 270.00, NOW(), NOW()),
(gen_random_uuid(), 'class-eng-12', 'plan-yearly', 950.00, NOW(), NOW());

-- 5. Create some test sessions (optional)
INSERT INTO class_sessions (id, classroom_id, title, description, session_date, start_time, end_time, session_type, is_recorded, status, created_at, updated_at) VALUES
(gen_random_uuid(), 'class-math-11', 'Algebra Basics', 'Introduction to algebraic expressions', CURRENT_DATE + INTERVAL '1 day', '10:00:00', '11:30:00', 'live', true, 'scheduled', NOW(), NOW()),
-- (gen_random_uuid(), 'class-physics-12', 'Newton\'s Laws', 'Understanding the three laws of motion', CURRENT_DATE + INTERVAL '2 days', '14:00:00', '15:30:00', 'live', true, 'scheduled', NOW(), NOW()),
(gen_random_uuid(), 'class-chem-10', 'Periodic Table', 'Elements and their properties', CURRENT_DATE + INTERVAL '3 days', '11:00:00', '12:30:00', 'live', false, 'scheduled', NOW(), NOW());

-- =============================================
-- TEST DATA SETUP COMPLETE
-- =============================================

-- Verification queries to check data
SELECT 'Payment Plans' as table_name, COUNT(*) as record_count FROM payment_plans
UNION ALL
SELECT 'Users', COUNT(*) FROM users
UNION ALL
SELECT 'Classrooms', COUNT(*) FROM classrooms
UNION ALL
SELECT 'Classroom Pricing', COUNT(*) FROM classroom_pricing
UNION ALL
SELECT 'Class Sessions', COUNT(*) FROM class_sessions;

-- Show available classrooms for testing
SELECT 
    c.name as classroom_name,
    c.subject,
    c.grade_level,
    c.board,
    c.teacher_name,
    cp.price,
    pp.billing_cycle
FROM classrooms c
JOIN classroom_pricing cp ON c.id = cp.classroom_id
JOIN payment_plans pp ON cp.payment_plan_id = pp.id
WHERE c.is_active = true
ORDER BY c.subject, c.grade_level, pp.billing_cycle;
